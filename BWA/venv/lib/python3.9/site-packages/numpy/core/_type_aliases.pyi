<<<<<<< HEAD
from typing import Any, TypedDict
=======
from typing import Dict, Union, Type, List, TypedDict
>>>>>>> c03913b4420b10b4657dfb6a856eb245e1ebfb58

from numpy import generic, signedinteger, unsignedinteger, floating, complexfloating

class _SCTypes(TypedDict):
<<<<<<< HEAD
    int: list[type[signedinteger[Any]]]
    uint: list[type[unsignedinteger[Any]]]
    float: list[type[floating[Any]]]
    complex: list[type[complexfloating[Any, Any]]]
    others: list[type]

sctypeDict: dict[int | str, type[generic]]
=======
    int: List[Type[signedinteger]]
    uint: List[Type[unsignedinteger]]
    float: List[Type[floating]]
    complex: List[Type[complexfloating]]
    others: List[type]

sctypeDict: Dict[Union[int, str], Type[generic]]
>>>>>>> c03913b4420b10b4657dfb6a856eb245e1ebfb58
sctypes: _SCTypes
